{"version":3,"file":"core.js","sources":["../../../../.temp/packages/@ngx-meta/core/src/models/page-title-positioning.ts","../../../../.temp/packages/@ngx-meta/core/src/meta.loader.ts","../../../../.temp/packages/@ngx-meta/core/src/util.ts","../../../../.temp/packages/@ngx-meta/core/src/meta.service.ts","../../../../.temp/packages/@ngx-meta/core/src/meta.guard.ts","../../../../.temp/packages/@ngx-meta/core/index.ts"],"sourcesContent":["\nexport type PageTitlePositioning = number;\nexport let PageTitlePositioning: any = {};\nPageTitlePositioning.AppendPageTitle = 0;\nPageTitlePositioning.PrependPageTitle = 10;\nPageTitlePositioning[PageTitlePositioning.AppendPageTitle] = \"AppendPageTitle\";\nPageTitlePositioning[PageTitlePositioning.PrependPageTitle] = \"PrependPageTitle\";\n\r\n","// module\r\n\nimport { PageTitlePositioning } from './models/page-title-positioning';\r\nimport { MetaSettings } from './models/meta-settings';\n/**\n * @abstract\n */\nexport abstract class MetaLoader {\n/**\n * @abstract\n * @return {?}\n */\nsettings() {}\r\n}\nexport class MetaStaticLoader implements MetaLoader {\n/**\n * @return {?}\n */\nget settings(): MetaSettings {\r\n    return this.providedSettings;\r\n  }\n/**\n * @param {?=} providedSettings\n */\nconstructor(private readonly providedSettings: MetaSettings = {\r\n    pageTitlePositioning: PageTitlePositioning.PrependPageTitle,\r\n    defaults: {}\r\n  }) {\r\n  }\r\n}\n\nfunction MetaStaticLoader_tsickle_Closure_declarations() {\n/** @type {?} */\nMetaStaticLoader.prototype.providedSettings;\n}\n\r\n","// libs\r\n\nimport { Observable } from 'rxjs/Observable';\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isPromise(obj: any): obj is Promise<any> {\r\n  return !!obj && typeof obj.then === 'function';\r\n}\n/**\n * @param {?} obj\n * @return {?}\n */\nexport function isObservable(obj: any | Observable<any>): obj is Observable<any> {\r\n  // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\r\n  // return !!(obj && obj[symbolObservable]);\r\n  return !!obj && typeof obj.subscribe === 'function';\r\n}\r\n","// angular\r\n\nimport { Injectable } from '@angular/core';\r\nimport { Meta, Title } from '@angular/platform-browser';\r\n\r\n// libs\r\n\nimport { Observable } from 'rxjs/Observable';\r\nimport'rxjs/add/observable/of';\r\nimport'rxjs/add/observable/fromPromise';\r\n\r\n// module\r\n\nimport { PageTitlePositioning } from './models/page-title-positioning';\r\nimport { MetaLoader } from './meta.loader';\r\nimport { isObservable, isPromise } from './util';\r\nimport { MetaSettings } from './models/meta-settings';\nexport class MetaService {\r\n  protected readonly settings: MetaSettings;\nprivate readonly isMetaTagSet: any;\n/**\n * @param {?} loader\n * @param {?} title\n * @param {?} meta\n */\nconstructor(public readonly loader: MetaLoader,\nprivate readonly title: Title,\nprivate readonly meta: Meta) {\r\n    this.settings = loader.settings;\r\n    this.isMetaTagSet = {};\r\n  }\n/**\n * @param {?} title\n * @param {?=} override\n * @return {?}\n */\nsetTitle(title: string, override = false): void {\r\n    const /** @type {?} */ title$ = title\r\n      ? this.callback(title)\r\n      : Observable.of('');\r\n\r\n    title$\r\n      .subscribe((res: string) => {\r\n        let /** @type {?} */ fullTitle = '';\r\n\r\n        if (!res) {\r\n          const /** @type {?} */ defaultTitle$ = (this.settings.defaults && this.settings.defaults['title'])\r\n            ? this.callback(this.settings.defaults['title'])\r\n            : Observable.of('');\r\n\r\n          defaultTitle$\r\n            .subscribe((defaultTitle: string) => {\r\n              if (!override && this.settings.pageTitleSeparator && this.settings.applicationName)\r\n                this.callback(this.settings.applicationName)\r\n                  .subscribe((applicationName: string) => {\r\n                    fullTitle = applicationName ? this.getTitleWithPositioning(defaultTitle, applicationName) : defaultTitle;\r\n                    this.updateTitle(fullTitle);\r\n                  });\r\n              else\r\n                this.updateTitle(defaultTitle);\r\n            });\r\n        } else if (!override && this.settings.pageTitleSeparator && this.settings.applicationName)\r\n          this.callback(this.settings.applicationName)\r\n            .subscribe((applicationName: string) => {\r\n              fullTitle = applicationName ? this.getTitleWithPositioning(res, applicationName) : res;\r\n              this.updateTitle(fullTitle);\r\n            });\r\n        else\r\n          this.updateTitle(res);\r\n      });\r\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nsetTag(key: string, value: string): void {\r\n    if (key === 'title')\r\n      throw new Error(`Attempt to set ${key} through \"setTag\": \"title\" is a reserved tag name. `\r\n        + 'Please use `MetaService.setTitle` instead.');\r\n\r\n    value = value || ((this.settings.defaults && this.settings.defaults[key])\r\n      ? this.settings.defaults[key]\r\n      : '');\r\n\r\n    const /** @type {?} */ value$ = (key !== 'og:locale' && key !== 'og:locale:alternate')\r\n      ? this.callback(value)\r\n      : Observable.of(value);\r\n\r\n    value$\r\n      .subscribe((res: string) => {\r\n        this.updateTag(key, res);\r\n      });\r\n  }\n/**\n * @param {?} currentUrl\n * @param {?=} metaSettings\n * @return {?}\n */\nupdate(currentUrl: string, metaSettings?: any): void {\r\n    if (!metaSettings) {\r\n      const /** @type {?} */ fallbackTitle = this.settings.defaults\r\n        ? (this.settings.defaults['title'] || this.settings['applicationName'])\r\n        : this.settings['applicationName'];\r\n\r\n      this.setTitle(fallbackTitle, true);\r\n    } else {\r\n      if (metaSettings.disabled) {\r\n        this.update(currentUrl);\r\n\r\n        return;\r\n      }\r\n\r\n      this.setTitle(metaSettings.title, metaSettings.override);\r\n\r\n      Object.keys(metaSettings)\r\n        .forEach(key => {\r\n          let /** @type {?} */ value = metaSettings[key];\r\n\r\n          if (key === 'title' || key === 'override')\r\n            return;\r\n          else if (key === 'og:locale')\r\n            value = value.replace(/-/g, '_');\r\n          else if (key === 'og:locale:alternate') {\r\n            const /** @type {?} */ currentLocale = metaSettings['og:locale'];\r\n            this.updateLocales(currentLocale, metaSettings[key]);\r\n\r\n            return;\r\n          }\r\n\r\n          this.setTag(key, value);\r\n        });\r\n    }\r\n\r\n    if (this.settings.defaults)\r\n      Object.keys(this.settings.defaults)\r\n        .forEach(key => {\r\n          let /** @type {?} */ value = this.settings.defaults[key];\r\n\r\n          if ((metaSettings && (key in this.isMetaTagSet || key in metaSettings)) || key === 'title' || key === 'override')\r\n            return;\r\n          else if (key === 'og:locale')\r\n            value = value.replace(/-/g, '_');\r\n          else if (key === 'og:locale:alternate') {\r\n            const /** @type {?} */ currentLocale = metaSettings ? metaSettings['og:locale'] : undefined;\r\n            this.updateLocales(currentLocale, value);\r\n\r\n            return;\r\n          }\r\n\r\n          this.setTag(key, value);\r\n        });\r\n\r\n    const /** @type {?} */ url = ((this.settings.applicationUrl || '/') + currentUrl)\r\n      .replace(/(https?:\\/\\/)|(\\/)+/g, '$1$2')\r\n      .replace(/\\/$/g, '');\r\n\r\n    this.setTag('og:url', url || '/');\r\n  }\n/**\n * @param {?} value\n * @return {?}\n */\nprivate callback(value: string): Observable<string> {\r\n    if (this.settings.callback) {\r\n      const /** @type {?} */ value$ = this.settings.callback(value);\r\n\r\n      if (!isObservable(value$))\r\n        return isPromise(value$)\r\n          ? Observable.fromPromise(value$)\r\n          : Observable.of(value$);\r\n\r\n      return value$;\r\n    }\r\n\r\n    return Observable.of(value);\r\n  }\n/**\n * @param {?} title\n * @param {?} applicationName\n * @return {?}\n */\nprivate getTitleWithPositioning(title: string, applicationName: string): string {\r\n    switch (this.settings.pageTitlePositioning) {\r\n      case PageTitlePositioning.AppendPageTitle:\r\n        return applicationName + this.settings.pageTitleSeparator + title;\r\n      case PageTitlePositioning.PrependPageTitle:\r\n        return title + this.settings.pageTitleSeparator + applicationName;\r\n      default:\r\n        throw new Error(`Invalid pageTitlePositioning specified [${this.settings.pageTitlePositioning}]!`);\r\n    }\r\n  }\n/**\n * @param {?} title\n * @return {?}\n */\nprivate updateTitle(title: string): void {\r\n    this.title.setTitle(title);\r\n    this.meta.updateTag({\r\n      property: 'og:title',\r\n      content: title\r\n    });\r\n  }\n/**\n * @param {?} currentLocale\n * @param {?} availableLocales\n * @return {?}\n */\nprivate updateLocales(currentLocale: string, availableLocales: string): void {\r\n    currentLocale = currentLocale || (this.settings.defaults\r\n      ? this.settings.defaults['og:locale']\r\n      : '');\r\n\r\n    if (currentLocale && this.settings.defaults)\r\n      this.settings.defaults['og:locale'] = currentLocale.replace(/_/g, '-');\r\n\r\n    // TODO: set HTML lang attribute - https://github.com/ngx-meta/core/issues/32\r\n    // const html = this.document.querySelector('html');\r\n    // html.setAttribute('lang', currentLocale);\r\n\r\n    const /** @type {?} */ elements = this.meta.getTags('property=\"og:locale:alternate\"');\r\n\r\n    elements.forEach((element: any) => {\r\n      this.meta.removeTagElement(element);\r\n    });\r\n\r\n    if (currentLocale && availableLocales)\r\n      availableLocales.split(',')\r\n        .forEach((locale: string) => {\r\n          if (currentLocale.replace(/-/g, '_') !== locale.replace(/-/g, '_'))\r\n            this.meta.addTag({\r\n              property: 'og:locale:alternate',\r\n              content: locale.replace(/-/g, '_')\r\n            });\r\n        });\r\n  }\n/**\n * @param {?} key\n * @param {?} value\n * @return {?}\n */\nprivate updateTag(key: string, value: string): void {\r\n    if (key.lastIndexOf('og:', 0) === 0)\r\n      this.meta.updateTag({\r\n        property: key,\r\n        content: key === 'og:locale' ? value.replace(/-/g, '_') : value\r\n      });\r\n    else\r\n      this.meta.updateTag({\r\n        name: key,\r\n        content: value\r\n      });\r\n\r\n    this.isMetaTagSet[key] = true;\r\n\r\n    if (key === 'description')\r\n      this.meta.updateTag({\r\n        property: 'og:description',\r\n        content: value\r\n      });\r\n    else if (key === 'author')\r\n      this.meta.updateTag({\r\n        property: 'og:author',\r\n        content: value\r\n      });\r\n    else if (key === 'publisher')\r\n      this.meta.updateTag({\r\n        property: 'og:publisher',\r\n        content: value\r\n      });\r\n    else if (key === 'og:locale') {\r\n      const /** @type {?} */ availableLocales = this.settings.defaults\r\n        ? this.settings.defaults['og:locale:alternate']\r\n        : '';\r\n\r\n      this.updateLocales(value, availableLocales);\r\n      this.isMetaTagSet['og:locale:alternate'] = true;\r\n    } else if (key === 'og:locale:alternate') {\r\n      const /** @type {?} */ currentLocale = this.meta.getTag('property=\"og:locale\"').content;\r\n\r\n      this.updateLocales(currentLocale, value);\r\n      this.isMetaTagSet['og:locale'] = true;\r\n    }\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MetaLoader, },\n{type: Title, },\n{type: Meta, },\n];\n}\n\nfunction MetaService_tsickle_Closure_declarations() {\n/** @type {?} */\nMetaService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMetaService.ctorParameters;\n/** @type {?} */\nMetaService.prototype.settings;\n/** @type {?} */\nMetaService.prototype.isMetaTagSet;\n/** @type {?} */\nMetaService.prototype.loader;\n/** @type {?} */\nMetaService.prototype.title;\n/** @type {?} */\nMetaService.prototype.meta;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// angular\r\n\nimport { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, CanActivateChild, RouterStateSnapshot } from '@angular/router';\r\n\r\n// module\r\n\nimport { MetaService } from './meta.service';\nexport class MetaGuard implements CanActivate, CanActivateChild {\n/**\n * @param {?} meta\n */\nconstructor(private readonly meta: MetaService) {\r\n  }\n/**\n * @param {?} route\n * @param {?} state\n * @return {?}\n */\ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    const /** @type {?} */ url = state.url;\r\n\r\n    const /** @type {?} */ metaSettings = (route && route.data && route.data['meta'])\r\n      ? route.data['meta']\r\n      : undefined;\r\n\r\n    this.meta.update(url, metaSettings);\r\n\r\n    return true;\r\n  }\n/**\n * @param {?} route\n * @param {?} state\n * @return {?}\n */\ncanActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    return this.canActivate(route, state);\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MetaService, },\n];\n}\n\nfunction MetaGuard_tsickle_Closure_declarations() {\n/** @type {?} */\nMetaGuard.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMetaGuard.ctorParameters;\n/** @type {?} */\nMetaGuard.prototype.meta;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// angular\r\n\nimport { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\r\n\r\n// module\r\n\nimport { MetaGuard } from './src/meta.guard';\r\nimport { MetaLoader, MetaStaticLoader } from './src/meta.loader';\r\nimport { MetaService } from './src/meta.service';\r\n\r\nexport {MetaSettings} from './src/models/meta-settings';\r\nexport {PageTitlePositioning} from './src/models/page-title-positioning';\r\nexport {MetaGuard} from './src/meta.guard';\r\nexport {MetaLoader,MetaStaticLoader} from './src/meta.loader';\r\nexport {MetaService} from './src/meta.service';\n/**\n * @return {?}\n */\nexport function metaFactory(): MetaLoader {\r\n  return new MetaStaticLoader();\r\n}\nexport class MetaModule {\n/**\n * @param {?=} configuredProvider\n * @return {?}\n */\nstatic forRoot(configuredProvider: any = {\r\n    provide: MetaLoader,\r\n    useFactory: (metaFactory)\r\n  }): ModuleWithProviders {\r\n    return {\r\n      ngModule: MetaModule,\r\n      providers: [\r\n        configuredProvider,\r\n        MetaGuard,\r\n        MetaService\r\n      ]\r\n    };\r\n  }\n/**\n * @param {?} parentModule\n */\nconstructor(  parentModule: MetaModule) {\r\n    if (parentModule)\r\n      throw new Error('MetaModule already loaded; import in root module only.');\r\n  }\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: MetaModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction MetaModule_tsickle_Closure_declarations() {\n/** @type {?} */\nMetaModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nMetaModule.ctorParameters;\n}\n\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}